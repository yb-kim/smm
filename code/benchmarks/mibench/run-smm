#! /usr/bin/env python
import os
import subprocess

cwd = os.getcwd()
directories = []
for path in os.listdir(cwd):
    if os.path.isdir(path):
        directories.append(path)
#directories = [ 'patricia', 'susan.smoothings']
#directories.remove('patricia')

experiments = range(10, 110, 10)
experiments = [50]
#directories = ["rijndael.decode"]

for directory in directories:
    if directory in ["dijkstra", "patricia"]:
        continue
    os.chdir(directory)
    subprocess.call("rm -rf results; mkdir results", shell=True)
    command = ""
    for spmRatio in experiments:
        print "running %s with %d%% spm" % (directory, spmRatio)

        command = "../collect setSpmSize %d" % (spmRatio)
        subprocess.call(command, shell=True)

        makeCommand = "make clean; smmmake --clean; ./configure-smm; make; make cmh; make cm; ./runme;"
        makeCommand = "make clean; smmmake --clean; ./configure-smm; make; make cmh; make cm;"
        subprocess.call(makeCommand, shell=True)

        command = "../run-function-split ../%s" % (directory)
        subprocess.call(command, shell=True)
        os.chdir("function-split")
        subprocess.call(makeCommand, shell=True)
        os.chdir("../")

        command = "rm -rf results/%d; mkdir results/%d; mv m5out/smm m5out/smmcm results/%d;" % (spmRatio, spmRatio, spmRatio)
        command += "mv function-split/m5out/smm results/%d/fs_smm; mv function-split/m5out/smmcm results/%d/fs_smmcm;" % (
            spmRatio, spmRatio)
        subprocess.call(command, shell=True)

        spmSize = 0
        nRegions = 0
        try:
            with open("results/%d/smmcm/regions.txt" % spmRatio, "w") as outFile:
                with open("configure-smm") as configureFile:
                    for line in configureFile:
                        if line.startswith("#") or not line.strip():
                            continue
                        if not line.startswith("smmmake"):
                            continue
                        sizeOptionIndex = line.find("--spm-size")
                        if sizeOptionIndex > 0:
                            spmSize = int(line.split()[-1])
                        else:
                            spmSize = 0

                try:
                    with open("_mapping") as mappingFile:
                        nRegions = int(mappingFile.readline())
                except:
                    nRegions = 0

                outFile.write("spmSize: %d\n" % spmSize)
                outFile.write("nRegions: %d\n" %nRegions)

            with open("results/%d/fs_smmcm/regions.txt" % spmRatio, "w") as outFile:
                try:
                    with open("function-split/_mapping") as mappingFile:
                        nRegions = int(mappingFile.readline())
                except:
                    nRegions = 0

                outFile.write("spmSize: %d\n" % spmSize)
                outFile.write("nRegions: %d\n" %nRegions)
        except:
            pass

    os.chdir(cwd)
